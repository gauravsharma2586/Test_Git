---
- name: Ensure dependencies are installed.
  apt:
    name:
      - apt-transport-https
      - ca-certificates
    state: present
- name: Ensure additional dependencies are installed (on Ubuntu < 20.04 and any other systems).
  apt:
    name: gnupg2
    state: present
  when: ansible_distribution != "Ubuntu" or ansible_distribution_version is version('20.04', '<')

- name: Ensure additional dependencies are installed (on Ubuntu >= 20.04).
  apt:
    name: gnupg
    state: present
  when: ansible_distribution == "Ubuntu" or ansible_distribution_version is version('20.04', '>=')

- name: Ensure curl is present
  apt:
      name: curl
      state: present

- name: docker gpg key
  become_method: sudo 
  shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && apt update 

- name: Add Docker apt key.
  shell: |
      echo \
      "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
      $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null && apt update 
- name: Install Docker.
  apt:
    name: "{{ item  }}"
    state: latest
  notify: restart docker
  
  loop:
    -  docker-ce
    -  docker-ce-cli
    -  containerd.io  
            

- name: Ensure Docker is started and enabled at boot.
  service:
    name: docker
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"

- name: Ensure handlers are notified now to avoid firewall conflicts.
  meta: flush_handlers

- name: Check current docker-compose version.
  command: "{{ docker_compose_path }} --version"
  register: docker_compose_current_version
  changed_when: false
  failed_when: false

- name: Install Docker Compose (if configured).
  become_method: sudo
  shell: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sleep 30
          chmod 0755  /usr/local/bin/docker-compose
          ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
- name: Ensure docker users are added to the docker group.
  user:
    name: "{{ user  }}"
    groups: docker
    append: true
  

- name: Copy docker-compose file
  template:
    src: docker-compose.yml
    dest: /home/{{ user }}/stf
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: 0755
  become: true
  when: not stf_file.stat.exists


- name: run command for network 
  shell: ip addr add 192.168.0.20/24 dev lo label lo:1 && iptables -I INPUT -j ACCEPT
  ignore_errors: True 